/**
 * An angular.js module utilizing web workers to execute code asynchronously in a seperate thread
 * @version v0.0.6 - 2015-05-26 * @link https://github.com/esphen/web-worker
 * @author Espen Henriksen <esphendev@icloud.com>
 * @license MIT License, http://www.opensource.org/licenses/MIT
 */!function(a,b,c){b.module("esphen.web-worker",["ng"]).factory("WebWorker",["$q",function(b){"use strict";var c=function(c,d){var e=b.defer(),f=c.toString(),g=f.match(/^function\s*[^\(]*\(\s*([^\)]*)\)/m),h=g[1]?g[1]:"";f="onmessage = function("+h+"){postMessage("+f+"("+h+"))}",a.URL=a.URL||a.webkitURL;var i;try{i=new Blob([f],{type:"application/javascript"})}catch(j){a.BlobBuilder=a.BlobBuilder||a.WebKitBlobBuilder||a.MozBlobBuilder,i=new BlobBuilder,i.append(f),i=i.getBlob()}try{var k=new Worker(a.URL.createObjectURL(i));k.onmessage=function(a){e.resolve(a.data)},k.onerror=function(a){e.reject(a)},k.postMessage(d)}catch(j){console.info("web-worker: Browser does not support generating webworker from Blob, fallback to non-web worker"),e.resolve(c({data:d}))}return e.promise},d=function(a,c){var d=b.defer();return d.resolve(a({data:c})),d.promise};return{run:function(b,e){if("function"!=typeof b)throw new Error("WebWorker: First parameter must be a function");return a.Worker?c(b,e):d(b,e)}}}])}(window,window.angular);